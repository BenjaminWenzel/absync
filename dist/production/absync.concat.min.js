!function(){"use strict";angular.module("absync",[])}(),function(e){"use strict";function t(e){var t=this;t.__ioSocket=null,t.__registerLater=[],t.__collections={},t.configure=function(e){var n=e.socket||e;if("function"==typeof n)t.__ioSocket=n();else{if(!(io&&io.Socket&&n instanceof io.Socket))throw new Error("configure() expects input to be a function or a socket.io Socket instance.");t.__ioSocket=n}t.__registerLater.length&&(angular.forEach(t.__registerLater,function(e){this.__handleEntityEvent(e.eventName,e.callback,e.rootScope)}),t.__registerLater=[])},t.collection=function(n,o){if(t.__collections[n])throw new Error("A collection with the name '"+n+"' was already requested. Names for collections must be unique.");t.__collections[n]=i(n,o),e.service(n,t.__collections[n])},t.$get=function(e){return new n(this,e)},t.$get.$inject=["$rootScope"]}function n(e,t){this.__absyncProvider=e,this.__scope=t}function i(e,t){function n(n,i,r,a,c,s){var l=this;r.info("absync service '"+e+"' was instantiated.");var h=t.injector||i,y=h.has(t.model);if(!y)throw new Error("Unable to construct the '"+e+"' service, because the referenced model '"+t.model+"' is not available for injection.");var f="string"==typeof t.model?h.get(t.model):t.model,u=f.serialize||t.serialize||o,d=f.deserialize||t.deserialize||o;l.name=e,l.configuration=t,l.entityCache=[],l.__entityCacheRaw=null,l.__dataAvailableDeferred=a.defer(),l.__objectsAvailableDeferred=a.defer(),l.dataAvailable=l.__dataAvailableDeferred.promise,l.objectsAvailable=l.__objectsAvailableDeferred.promise,l.httpInterface=n,l.logInterface=r,l.scope=c,l.q=a,l.serializer=u,l.deserializer=d,s.on(t.entityName,l.__onEntityOnWebsocket.bind(l)),s.on(t.collectionName,l.__onCollectionOnWebsocket.bind(l)),c.$on(t.entityName,l.__onEntityReceived.bind(l)),c.$on(t.collectionName,l.__onCollectionReceived.bind(l)),l.dataAvailable.then(l.__onDataAvailable.bind(l))}return n.$inject=["$http","$injector","$log","$q","$rootScope","absync"],n.prototype.__onEntityOnWebsocket=function(e){var n=this;n.scope.$broadcast(t.entityName,e[t.entityName])},n.prototype.__onCollectionOnWebsocket=function(e){var n=this;n.scope.$broadcast(t.collectionName,e[t.collectionName])},n.prototype.__onDataAvailable=function(e){function n(e){i.entityCache.push(i.deserializer(e))}var i=this;e[t.collectionName].forEach(n),i.__objectsAvailableDeferred.resolve(i.entityCache),i.scope.$broadcast("collectionNew",{service:i,cache:i.entityCache})},n.prototype.__onEntityReceived=function(e,t){var n=this,i=t;1===Object.keys(i).length&&i.hasOwnProperty("id")?(n.logInterface.info("Entity was deleted from the server. Updating cache…"),n.__removeEntityFromCache(i.id)):(n.logInterface.debug("Entity was updated on the server. Updating cache…"),n.__updateCacheWithEntity(n.deserializer(i)))},n.prototype.__onCollectionReceived=function(e,t){function n(e){var t=i.deserializer(e);i.__updateCacheWithEntity(t)}for(var i=this,o=t;0<i.entityCache.length;)i.entityCache.length=0;o.forEach(n)},n.prototype.ensureLoaded=function(e){function n(e){o.__entityCacheRaw=e.data,o.__dataAvailableDeferred.resolve(e.data)}function i(e){o.logInterface.error("Unable to retrieve the collection from the server.",e),o.__entityCacheRaw=null,o.scope.$emit("absyncError",e)}var o=this;if(e=e===!0,null===o.__entityCacheRaw||e){if(o.__entityCacheRaw=[],!t.collectionName||!t.collectionUri)return o.q([]);o.logInterface.info("Retrieving '"+t.collectionName+"' collection…"),o.httpInterface.get(t.collectionUri).then(n,i)}return o.q.all([o.dataAvailable,o.objectsAvailable]).then(function(){return o.entityCache})},n.prototype.read=function(e){function n(e){if(!e[t.entityName])throw new Error("The requested entity could not be found in the database.");var n=o.deserializer(e[t.entityName]);return o.__updateCacheWithEntity(n),n}function i(t){o.logInterface.error("Unable to retrieve entity with ID '"+e+"' from the server.",t),o.scope.$emit("absyncError",t)}for(var o=this,r=0,a=o.entityCache[0];r<o.entityCache.length;++r,a=o.entityCache[r])if(a.id===e)return o.q(a);return o.httpInterface.get(t.entityUri+"/"+e).then(n,i)},n.prototype.update=function(e){function n(e){if(e.data[t.entityName]){var n=o.deserializer(e.data[t.entityName]);return o.__updateCacheWithEntity(n),n}throw new Error("The response from the server was not in the expected format. It should have a member named '"+t.entityName+"'.")}function i(e){o.logInterface.error("Unable to store entity on the server.",e),o.logInterface.error(e)}var o=this,r=o.reduceComplex(e),a=o.serializer(r),c={};return c[t.entityName]=a,"undefined"!=typeof e.id?o.httpInterface.put(t.entityUri+"/"+e.id,c).then(n,i):o.httpInterface.post(t.collectionUri,c).then(n,i)},n.prototype.create=n.prototype.update,n.prototype["delete"]=function(e){function n(){return o.__removeEntityFromCache(r)}function i(e,t,n,i){throw o.logInterface.error(e),new Error("Unable to delete entity.")}var o=this,r=e.id;return o.httpInterface["delete"](t.entityUri+"/"+r).success(n).error(i)},n.prototype.__updateCacheWithEntity=function(e){var t=this;t.logInterface.info("Updating entity in cache…");for(var n=!1,i=0,o=t.entityCache[0];i<t.entityCache.length;++i,o=t.entityCache[i])if(o.id==e.id){t.scope.$broadcast("beforeEntityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache[i],updated:e});var r=t.entityCache[i];r.copyFrom?r.copyFrom(e):angular.extend(r,e),n=!0,t.scope.$broadcast("entityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache[i]});break}n||(t.entityCache.push(e),t.scope.$broadcast("entityNew",{service:t,cache:t.entityCache,entity:e}))},n.prototype.__removeEntityFromCache=function(e){for(var t=this,n=0,i=t.entityCache[0];n<t.entityCache.length;++n,i=t.entityCache[n])if(i.id==e){t.scope.$broadcast("beforeEntityRemoved",{service:t,cache:t.entityCache,entity:i}),t.entityCache.splice(n,1),t.scope.$broadcast("entityRemoved",{service:t,cache:t.entityCache,entity:i});break}},n.prototype.lookupTableById=function(){for(var e=this,t=[],n=0;n<e.entityCache.length;++n)t[e.entityCache[n].id]=e.entityCache[n];return t},n.prototype.reduceComplex=function(e,t){var n=this,i=t?[]:{};for(var o in e)e.hasOwnProperty(o)&&(i[o]=Array.isArray(e[o])?n.reduceComplex(e[o],!0):e[o]&&e[o].id?e[o].id:e[o]);return i},n.prototype.populateComplex=function(e,t,n,i){function o(o,r){function c(n){e[t][r]=n}if("string"!=typeof e[t][r]){if(!i||"object"!=typeof e[t][r]||"string"!=typeof e[t][r].id)return a.q.when(!1);e[t][r]=e[t][r].id}return n.read(e[t][r]).then(c)}function r(n){e[t]=n}var a=this;if(Array.isArray(e[t])){var c=e[t].map(o);return a.q.all(c)}if("string"!=typeof e[t]){if(!i||"object"!=typeof e[t]||"string"!=typeof e[t].id)return a.q.when(!1);e[t]=e[t].id}return n.read(e[t]).then(r)},n}function o(e){return e}angular.module("absync").provider("absync",t),t.$inject=["$provide"],n.prototype.configure=function(e){var t=this.__absyncProvider;t.configure(e)},n.prototype.on=function(e,t){var n=this.__absyncProvider,i=this;return n.__ioSocket?void i.__handleEntityEvent(e,t,i.__scope):void n.__registerLater.push({eventName:e,callback:t,rootScope:n.__scope})},n.prototype.emit=function(e,t,n){var i=this.__absyncProvider;if(!i.__ioSocket)throw new Error("socket.io is not initialized.");var o=this.rootScope;i.__ioSocket.emit(e,t,function(){var e=arguments;o.$apply(function(){n&&n.apply(i.__ioSocket,e)})})},n.prototype.__handleEntityEvent=function(e,t,n){var i=this.__absyncProvider,o=function(){var e=arguments;n.$apply(function(){t.apply(i.__ioSocket,e)})};return i.__ioSocket.on(e,o),function(){i.__ioSocket.removeListener(e,o)}}}(),function(e){"use strict";function t(){return n}function n(t,n,i,o,r,a,c,s){this.model=t,this.collectionUri=n,this.entityUri=i;var l=t.prototype.constructor.name.toLowerCase();this.collectionName=o||l+"s",this.entityName=r||l,this.deserialize=a||e,this.serialize=c||e,this.injector=s||e}angular.module("absync").service("AbsyncServiceConfiguration",t)}();
//# sourceMappingURL=maps/absync.concat.min.js.map