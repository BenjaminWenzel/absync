!function(){"use strict";angular.module("absync",[])}(),function(){"use strict";function e(e,r,n){return new t(e,r,n)}function t(e,t,r){var n=this;n.__injector=e,n.__provide=t,n.__absyncCache=r,n.__ioSocket=null,n.__registerLater=[],n.__collections={},n.__entities={},n.debug=void 0}function r(e){this.__absyncProvider=e}e.$inject=["$injector","$provide","absyncCache"],angular.module("absync").provider("absync",e),t.prototype.configure=function(e){var t=this;if("undefined"!=typeof e.socket){var r=e.socket,n="undefined"!=typeof io&&io.Socket&&r instanceof io.Socket;if("function"==typeof r)t.__ioSocket=new r;else{if(!n)throw new Error("configure() expects input to be a function or a socket.io Socket instance.");t.__ioSocket=r}t.__registerLater.length&&(angular.forEach(t.__registerLater,t.__registerListener.bind(t)),t.__registerLater=[])}"undefined"!=typeof e.debug&&(t.debug=e.debug||!1),t.debug&&(angular.forEach(t.__collections,function(e){e.configuration.debug=!0}),angular.forEach(t.__entities,function(e){e.configuration.debug=!0}))},t.prototype.__registerListener=function(e){var t=this;t.$get().__handleEntityEvent(e.eventName,e.callback)},t.prototype.collection=function(e,t){var r=this;if(r.__collections[e])throw new Error("A collection with the name '"+e+"' was already requested. Names for collections must be unique.");if(r.__entities[e])throw new Error("An entity with the name '"+e+"' was already requested. Names for collections must be unique and can't be shared with entities.");t.debug="undefined"==typeof t.debug?r.debug:t.debug,r.__collections[e]={constructor:r.__absyncCache(e,t),configuration:t},r.__provide.service(e,r.__collections[e].constructor)},t.prototype.entity=function(e,t){var r=this;if(r.__entities[e])throw new Error("An entity with the name '"+e+"' was already requested. Names for entities must be unique.");if(r.__collections[e])throw new Error("A collection with the name '"+e+"' was already requested. Names for entities must be unique and can't be shared with collections.");t.debug="undefined"==typeof t.debug?r.debug:t.debug,r.__entities[e]={constructor:r.__absyncCache(e,t),configuration:t},r.__provide.service(e,r.__entities[e].constructor)},t.prototype.$get=function(){return new r(this)},r.prototype.configure=function(e){var t=this.__absyncProvider;t.configure(e)},r.prototype.on=function(e,t){var r=this.__absyncProvider,n=this;return r.__ioSocket?n.__handleEntityEvent(e,t):r.__registerLater.length>8192?null:(r.__registerLater.push({eventName:e,callback:t}),null)},r.prototype.__handleEntityEvent=function(e,t){var r=this.__absyncProvider;return r.__ioSocket.on(e,t),function(){r.__ioSocket.removeListener(e,t)}},r.prototype.emit=function(e,t,r){var n=this.__absyncProvider;if(!n.__ioSocket)throw new Error("socket.io is not initialized.");n.__ioSocket.emit(e,t,function(){r&&r.apply(n.__ioSocket,arguments)})}}(),function(){"use strict";function e(e,r){function n(n,i,a,o,c,s,l,h){var d=this,u=r.injector||i,f=u.has(r.model);if(!f)throw new Error("Unable to construct the '"+e+"' service, because the referenced model '"+r.model+"' is not available for injection.");var y="string"==typeof r.model?u.get(r.model):r.model,_=y.serialize||r.serialize||t,p=y.deserialize||r.deserialize||t;d.name=e,d.configuration=r,d.entityCache=r.collectionName?[]:{},d.__entityCacheRaw=null,d.enableRequestCache=!0,d.__requestCache={},d.allowBrowserCache=(angular.merge||angular.extend)({},{sync:!0,request:!0},r.allowBrowserCache),d.__uncached=h,d.httpInterface=n,d.logInterface=r.debug?a:l,d.scope=c,d.q=o,d.__dataAvailableDeferred=d.q.defer(),d.__objectsAvailableDeferred=d.q.defer(),d.dataAvailable=d.__dataAvailableDeferred.promise,d.objectsAvailable=d.__objectsAvailableDeferred.promise,d.logPrefix="absync:"+e.toLocaleUpperCase()+" ",d.forceEarlyCacheUpdate=!1,d.throwFailures=!0,d.serializer=_,d.deserializer=p,s.on(r.entityName,d.__onEntityOnWebsocket.bind(d)),r.collectionName&&s.on(r.collectionName,d.__onCollectionOnWebsocket.bind(d)),c.$on(r.entityName,d.__onEntityReceived.bind(d)),r.collectionName&&c.$on(r.collectionName,d.__onCollectionReceived.bind(d)),d.dataAvailable.then(d.__onDataAvailable.bind(d)),d.logInterface.info(d.logPrefix+"service was instantiated.")}function i(e,t){var n=this;if((e||n.forceEarlyCacheUpdate)&&t.data[r.entityName]){var i=n.deserializer(t.data[r.entityName]);if(n.forceEarlyCacheUpdate&&n.__updateCacheWithEntity(i),e)return i}}function a(e){var t=this;if(t.logInterface.error(t.logPrefix+"Unable to store entity on the server.",e),t.logInterface.error(e),t.scope.$emit("absyncError",e),t.throwFailures)throw e}return n.$inject=["$http","$injector","$log","$q","$rootScope","absync","absyncNoopLog","absyncUncachedFilter"],n.prototype.__onEntityOnWebsocket=function(e){var t=this;t.scope.$broadcast(r.entityName,e[r.entityName])},n.prototype.__onCollectionOnWebsocket=function(e){var t=this;t.scope.$broadcast(r.collectionName,e[r.collectionName])},n.prototype.__onDataAvailable=function(e){function t(e){n.entityCache.push(n.deserializer(e))}var n=this;if(Array.isArray(n.entityCache))angular.forEach(e[r.collectionName],t),n.__objectsAvailableDeferred.resolve(n.entityCache),n.scope.$broadcast("collectionNew",{service:n,cache:n.entityCache});else{var i=n.deserializer(e[r.entityName]);n.__updateCacheWithEntity(i),n.__objectsAvailableDeferred.resolve(n.entityCache)}},n.prototype.__onEntityReceived=function(e,t){var r=this,n=t;return r.dataAvailable.then(function(){return 1===Object.keys(n).length&&n.hasOwnProperty("id")?(r.logInterface.info(r.logPrefix+"Entity was deleted from the server. Updating cache…"),r.__removeEntityFromCache(n.id)):(r.logInterface.debug(r.logPrefix+"Entity was updated on the server. Updating cache…"),r.__updateCacheWithEntity(r.deserializer(n)))})},n.prototype.__onCollectionReceived=function(e,t){function r(e){var t=n.deserializer(e);n.__updateCacheWithEntity(t)}var n=this,i=t;n.entityCache.length=0,angular.forEach(i,r)},n.prototype.ensureLoaded=function(e){function t(e){if(!e.data[r.collectionName])throw new Error("The response from the server was not in the expected format. It should have a member named '"+r.collectionName+"'.");o.__entityCacheRaw=e.data,o.__dataAvailableDeferred.resolve(e.data)}function n(e){o.logInterface.error(o.logPrefix+"Unable to retrieve the collection from the server.",e),o.__entityCacheRaw=null,o.scope.$emit("absyncError",e),o.__dataAvailableDeferred.reject(e)}function i(e){if(!e.data[r.entityName])throw new Error("The response from the server was not in the expected format. It should have a member named '"+r.entityName+"'.");o.__entityCacheRaw=e.data,o.__dataAvailableDeferred.resolve(e.data)}function a(e){o.logInterface.error(o.logPrefix+"Unable to retrieve the entity from the server.",e),o.__entityCacheRaw=null,o.scope.$emit("absyncError",e),o.__dataAvailableDeferred.reject(e)}var o=this;if(e=e===!0,null===o.__entityCacheRaw||e)if(o.__entityCacheRaw=[],r.collectionName&&r.collectionUri)o.logInterface.info(o.logPrefix+"Retrieving '"+r.collectionName+"' collection…"),o.httpInterface.get(o.allowBrowserCache.sync?r.collectionUri:o.__uncached(r.collectionUri)).then(t,n);else{if(!r.entityName||!r.entityUri)return o.q.when([]);o.__entityCacheRaw={},o.httpInterface.get(o.allowBrowserCache.sync?r.entityUri:o.__uncached(r.entityUri)).then(i,a)}return o.q.all([o.dataAvailable,o.objectsAvailable]).then(function(){return o.entityCache})},n.prototype.seed=function(e){var t=this;return t.entityCache=e,Array.isArray(t.entityCache)?t.scope.$broadcast("collectionNew",{service:t,cache:t.entityCache}):(t.scope.$broadcast("beforeEntityNew",{service:t,cache:t.entityCache,entity:t.entityCache}),t.scope.$broadcast("entityNew",{service:t,cache:t.entityCache,entity:t.entityCache}),t.__objectsAvailableDeferred.resolve(t.entityCache)),t},n.prototype.sync=function(){var e=this;return e.__dataAvailableDeferred=e.q.defer(),e.__objectsAvailableDeferred=e.q.defer(),e.dataAvailable=e.__dataAvailableDeferred.promise,e.objectsAvailable=e.__objectsAvailableDeferred.promise,e.dataAvailable.then(e.__onDataAvailable.bind(e)),e.ensureLoaded(!0)},n.prototype.read=function(e,t){function n(e){if(!e.data[r.entityName])throw new Error("The response from the server was not in the expected format. It should have a member named '"+r.entityName+"'.");var t=a.deserializer(e.data[r.entityName]);return a.__updateCacheWithEntity(t),t}function i(t){if(a.logInterface.error(a.logPrefix+"Unable to retrieve entity with ID '"+e+"' from the server.",t),a.scope.$emit("absyncError",t),a.throwFailures)throw t}var a=this;if(t=t===!0,a.logInterface.debug(a.logPrefix+"Requesting entity '"+e+"' (forceReload:"+t+")…"),!t)for(var o=0,c=a.entityCache[0];o<a.entityCache.length;++o,c=a.entityCache[o])if(c.id===e)return a.logInterface.debug(a.logPrefix+"Requested entity  '"+e+"' is served from cache."),a.q.when(c);return a.logInterface.debug(a.logPrefix+"Requested entity  '"+e+"' is fetched from backend."),a.__requestEntity(e).then(n,i)},n.prototype.__requestEntity=function(e){function t(e,t){return delete n.__requestCache[e],t}var n=this;if(n.enableRequestCache&&n.__requestCache&&n.__requestCache[e])return n.logInterface.debug(n.logPrefix+"Entity request    '"+e+"' served from request cache."),n.__requestCache[e];var i=r.entityUri+(e?"/"+e:""),a=n.httpInterface.get(n.allowBrowserCache.request?i:n.__uncached(i)).then(t.bind(n,e));return n.enableRequestCache&&n.__requestCache&&(n.__requestCache[e]=a),a},n.prototype.update=function(e,t){var n=this;t=t||!1;var o=n.reduceComplex(e),c=n.serializer(o),s={};return s[r.entityName]=c,"undefined"!=typeof e.id?n.httpInterface.put(r.entityUri+"/"+e.id,s).then(i.bind(n,t),a.bind(n)):n.httpInterface.post(r.collectionUri,s).then(i.bind(n,t),a.bind(n))},n.prototype.patch=function(e){var t=this,n=t.reduceComplex(e),o=t.serializer(n),c={};if(c[r.entityName]=o,"undefined"!=typeof e.id)return t.httpInterface.patch(r.entityUri+"/"+e.id,c).then(i.bind(t),a.bind(t));throw new Error("Attempted to patch an entity that was never stored on the server.")},n.prototype.create=n.prototype.update,n.prototype["delete"]=function(e){function t(e){return i.__removeEntityFromCache(a)}function n(e){if(i.logInterface.error(e.data),i.scope.$emit("absyncError",e),i.throwFailures)throw e}var i=this,a=e.id;return i.httpInterface["delete"](r.entityUri+"/"+a).then(t)["catch"](n)},n.prototype.__updateCacheWithEntity=function(e){var t=this;if(t.logInterface.info(t.logPrefix+"Updating entity '"+(e.id||t.name)+"' in cache…",e),!Array.isArray(t.entityCache))return t.scope.$broadcast("beforeEntityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache,updated:e}),"function"==typeof t.entityCache.copyFrom?t.entityCache.copyFrom(e):angular.extend(t.entityCache,e),void t.scope.$broadcast("entityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache});for(var r=!1,n=0,i=t.entityCache[0];n<t.entityCache.length;++n,i=t.entityCache[n])if(i.id==e.id){t.scope.$broadcast("beforeEntityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache[n],updated:e});var a=t.entityCache[n];"function"==typeof a.copyFrom?a.copyFrom(e):angular.extend(a,e),r=!0,t.scope.$broadcast("entityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache[n]});break}r||(t.scope.$broadcast("beforeEntityNew",{service:t,cache:t.entityCache,entity:e}),t.entityCache.push(e),t.scope.$broadcast("entityNew",{service:t,cache:t.entityCache,entity:e}))},n.prototype.__removeEntityFromCache=function(e){for(var t=this,r=0,n=t.entityCache[0];r<t.entityCache.length;++r,n=t.entityCache[r])if(n.id==e){t.scope.$broadcast("beforeEntityRemoved",{service:t,cache:t.entityCache,entity:n}),t.entityCache.splice(r,1),t.scope.$broadcast("entityRemoved",{service:t,cache:t.entityCache,entity:n});break}},n.prototype.lookupTableById=function(){for(var e=this,t=[],r=0;r<e.entityCache.length;++r)t[e.entityCache[r].id]=e.entityCache[r];return t},n.prototype.reduceComplex=function(e,t){var r=this,n=t?[]:{};for(var i in e)e.hasOwnProperty(i)&&(Array.isArray(e[i])?n[i]=r.reduceComplex(e[i],!0):e[i]&&e[i].id?n[i]=e[i].id:n[i]=e[i]);return n},n.prototype.populateComplex=function(e,t,r,n){function i(i,a){function c(r){return e[t][a]=r,e}if("string"!=typeof e[t][a]){if(!n||"object"!=typeof e[t][a]||"string"!=typeof e[t][a].id)return o.q.when(!1);e[t][a]=e[t][a].id}return r.read(e[t][a]).then(c)}function a(r){e[t]=r}var o=this;if(Array.isArray(e[t])){var c=e[t].map(i);return o.q.all(c)}if("string"!=typeof e[t]){if(!n||"object"!=typeof e[t]||"string"!=typeof e[t].id)return o.q.when(!1);e[t]=e[t].id}return r.read(e[t]).then(a)},n}function t(e){return e}angular.module("absync").constant("absyncCache",e)}(),function(){"use strict";function e(){return t}function t(e,t,r,n,i,a,o,c,s,l){this.model=e,this.collectionUri=t,this.entityUri=r;var h=e.prototype.constructor.name.toLowerCase();this.collectionName=n||h+"s",this.entityName=i||h,this.deserialize=a||void 0,this.serialize=o||void 0,this.injector=c||void 0,this.debug=s||!1,this.allowBrowserCache=angular.merge({},{sync:!0,request:!0},l)}angular.module("absync").service("AbsyncServiceConfiguration",e)}(),function(){"use strict";angular.module("absync").constant("absyncNoopLog",{debug:angular.noop,info:angular.noop,error:angular.noop})}(),function(){"use strict";function e(){function e(e){if(!e)return e;var t=-1<e.indexOf("?")?"&":"?",r=(new Date).getTime();return e+t+"t="+r}return e}angular.module("absync").filter("absyncUncached",e)}();
//# sourceMappingURL=maps/absync.concat.min.js.map
