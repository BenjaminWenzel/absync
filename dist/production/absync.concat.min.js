!function(){"use strict";angular.module("absync",[])}(),function(){"use strict";function e(e,n){return new t(e,n)}function t(e,t){var n=this;n.__provide=e,n.__absyncCache=t,n.__ioSocket=null,n.__registerLater=[],n.__collections={}}function n(e){this.__absyncProvider=e}angular.module("absync").provider("absync",e),e.$inject=["$provide","absyncCache"],t.prototype.configure=function(e){var t=this,n=e.socket||e,i=io&&io.Socket&&n instanceof io.Socket;if("function"==typeof n)t.__ioSocket=n();else{if(!i)throw new Error("configure() expects input to be a function or a socket.io Socket instance.");t.__ioSocket=n}t.__registerLater.length&&(t.__registerLater.forEach(t.__registerListener.bind(t)),t.__registerLater=[])},t.prototype.__registerListener=function(e){var t=this;t.$get().__handleEntityEvent(e.eventName,e.callback)},t.prototype.collection=function(e,t){var n=this;if(n.__collections[e])throw new Error("A collection with the name '"+e+"' was already requested. Names for collections must be unique.");n.__collections[e]=n.__absyncCache(e,t),n.__provide.service(e,n.__collections[e])},t.prototype.$get=function(){return new n(this)},n.prototype.configure=function(e){var t=this.__absyncProvider;t.configure(e)},n.prototype.on=function(e,t){var n=this.__absyncProvider,i=this;return n.__ioSocket?i.__handleEntityEvent(e,t):n.__registerLater.length>8192?null:(n.__registerLater.push({eventName:e,callback:t}),null)},n.prototype.__handleEntityEvent=function(e,t){var n=this.__absyncProvider;return n.__ioSocket.on(e,t),function(){n.__ioSocket.removeListener(e,t)}},n.prototype.emit=function(e,t,n){var i=this.__absyncProvider;if(!i.__ioSocket)throw new Error("socket.io is not initialized.");i.__ioSocket.emit(e,t,function(){n&&n.apply(i.__ioSocket,arguments)})}}(),function(){"use strict";function e(e,n){function i(i,o,r,a,c,s){var l=this,h=n.injector||o,f=h.has(n.model);if(!f)throw new Error("Unable to construct the '"+e+"' service, because the referenced model '"+n.model+"' is not available for injection.");var y="string"==typeof n.model?h.get(n.model):n.model,d=y.serialize||n.serialize||t,u=y.deserialize||n.deserialize||t;l.name=e,l.configuration=n,l.entityCache=[],l.__entityCacheRaw=null,l.__dataAvailableDeferred=a.defer(),l.__objectsAvailableDeferred=a.defer(),l.dataAvailable=l.__dataAvailableDeferred.promise,l.objectsAvailable=l.__objectsAvailableDeferred.promise,l.httpInterface=i,l.logInterface=r,l.scope=c,l.q=a,l.logPrefix="absync:"+e.toLocaleUpperCase()+" ",l.forceEarlyCacheUpdate=!1,l.serializer=d,l.deserializer=u,s.on(n.entityName,l.__onEntityOnWebsocket.bind(l)),s.on(n.collectionName,l.__onCollectionOnWebsocket.bind(l)),c.$on(n.entityName,l.__onEntityReceived.bind(l)),c.$on(n.collectionName,l.__onCollectionReceived.bind(l)),l.dataAvailable.then(l.__onDataAvailable.bind(l)),l.logInterface.info(l.logPrefix+"service was instantiated.")}return i.$inject=["$http","$injector","$log","$q","$rootScope","absync"],i.prototype.__onEntityOnWebsocket=function(e){var t=this;t.scope.$broadcast(n.entityName,e[n.entityName])},i.prototype.__onCollectionOnWebsocket=function(e){var t=this;t.scope.$broadcast(n.collectionName,e[n.collectionName])},i.prototype.__onDataAvailable=function(e){function t(e){i.entityCache.push(i.deserializer(e))}var i=this;e[n.collectionName].forEach(t),i.__objectsAvailableDeferred.resolve(i.entityCache),i.scope.$broadcast("collectionNew",{service:i,cache:i.entityCache})},i.prototype.__onEntityReceived=function(e,t){var n=this,i=t;1===Object.keys(i).length&&i.hasOwnProperty("id")?(n.logInterface.info(n.logPrefix+"Entity was deleted from the server. Updating cache…"),n.__removeEntityFromCache(i.id)):(n.logInterface.debug(n.logPrefix+"Entity was updated on the server. Updating cache…"),n.__updateCacheWithEntity(n.deserializer(i)))},i.prototype.__onCollectionReceived=function(e,t){function n(e){var t=i.deserializer(e);i.__updateCacheWithEntity(t)}var i=this,o=t;i.entityCache.length=0,o.forEach(n)},i.prototype.ensureLoaded=function(e){function t(e){if(!e.data[n.collectionName])throw new Error("The response from the server was not in the expected format. It should have a member named '"+n.collectionName+"'.");o.__entityCacheRaw=e.data,o.__dataAvailableDeferred.resolve(e.data)}function i(e){o.logInterface.error(o.logPrefix+"Unable to retrieve the collection from the server.",e),o.__entityCacheRaw=null,o.scope.$emit("absyncError",e)}var o=this;if(e=e===!0,null===o.__entityCacheRaw||e){if(o.__entityCacheRaw=[],!n.collectionName||!n.collectionUri)return o.q.when([]);o.logInterface.info(o.logPrefix+"Retrieving '"+n.collectionName+"' collection…"),o.httpInterface.get(n.collectionUri).then(t,i)}return o.q.all([o.dataAvailable,o.objectsAvailable]).then(function(){return o.entityCache})},i.prototype.read=function(e,t){function i(e){if(!e.data[n.entityName])throw new Error("The response from the server was not in the expected format. It should have a member named '"+n.entityName+"'.");var t=r.deserializer(e.data[n.entityName]);return r.__updateCacheWithEntity(t),t}function o(t){r.logInterface.error(r.logPrefix+"Unable to retrieve entity with ID '"+e+"' from the server.",t),r.scope.$emit("absyncError",t)}var r=this;if(t=t===!0,!t)for(var a=0,c=r.entityCache[0];a<r.entityCache.length;++a,c=r.entityCache[a])if(c.id===e)return r.q.when(c);return r.httpInterface.get(n.entityUri+"/"+e).then(i,o)},i.prototype.update=function(e){function t(e){if(e.data[n.entityName]){var t=o.deserializer(e.data[n.entityName]);return o.forceEarlyCacheUpdate&&o.__updateCacheWithEntity(t),t}throw new Error("The response from the server was not in the expected format. It should have a member named '"+n.entityName+"'.")}function i(e){o.logInterface.error(o.logPrefix+"Unable to store entity on the server.",e),o.logInterface.error(e)}var o=this,r=o.reduceComplex(e),a=o.serializer(r),c={};return c[n.entityName]=a,"undefined"!=typeof e.id?o.httpInterface.put(n.entityUri+"/"+e.id,c).then(t,i):o.httpInterface.post(n.collectionUri,c).then(t,i)},i.prototype.create=i.prototype.update,i.prototype["delete"]=function(e){function t(e){return o.__removeEntityFromCache(r)}function i(e){throw o.logInterface.error(e.data),new Error("Unable to delete entity.")}var o=this,r=e.id;return o.httpInterface["delete"](n.entityUri+"/"+r).then(t)["catch"](i)},i.prototype.__updateCacheWithEntity=function(e){var t=this;t.logInterface.info(t.logPrefix+"Updating entity in cache…");for(var n=!1,i=0,o=t.entityCache[0];i<t.entityCache.length;++i,o=t.entityCache[i])if(o.id==e.id){t.scope.$broadcast("beforeEntityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache[i],updated:e});var r=t.entityCache[i];"function"==typeof r.copyFrom?r.copyFrom(e):angular.extend(r,e),n=!0,t.scope.$broadcast("entityUpdated",{service:t,cache:t.entityCache,entity:t.entityCache[i]});break}n||(t.entityCache.push(e),t.scope.$broadcast("entityNew",{service:t,cache:t.entityCache,entity:e}))},i.prototype.__removeEntityFromCache=function(e){for(var t=this,n=0,i=t.entityCache[0];n<t.entityCache.length;++n,i=t.entityCache[n])if(i.id==e){t.scope.$broadcast("beforeEntityRemoved",{service:t,cache:t.entityCache,entity:i}),t.entityCache.splice(n,1),t.scope.$broadcast("entityRemoved",{service:t,cache:t.entityCache,entity:i});break}},i.prototype.lookupTableById=function(){for(var e=this,t=[],n=0;n<e.entityCache.length;++n)t[e.entityCache[n].id]=e.entityCache[n];return t},i.prototype.reduceComplex=function(e,t){var n=this,i=t?[]:{};for(var o in e)e.hasOwnProperty(o)&&(Array.isArray(e[o])?i[o]=n.reduceComplex(e[o],!0):e[o]&&e[o].id?i[o]=e[o].id:i[o]=e[o]);return i},i.prototype.populateComplex=function(e,t,n,i){function o(o,r){function c(n){e[t][r]=n}if("string"!=typeof e[t][r]){if(!i||"object"!=typeof e[t][r]||"string"!=typeof e[t][r].id)return a.q.when(!1);e[t][r]=e[t][r].id}return n.read(e[t][r]).then(c)}function r(n){e[t]=n}var a=this;if(Array.isArray(e[t])){var c=e[t].map(o);return a.q.all(c)}if("string"!=typeof e[t]){if(!i||"object"!=typeof e[t]||"string"!=typeof e[t].id)return a.q.when(!1);e[t]=e[t].id}return n.read(e[t]).then(r)},i}function t(e){return e}angular.module("absync").constant("absyncCache",e)}(),function(){"use strict";function e(){return t}function t(e,t,n,i,o,r,a,c){this.model=e,this.collectionUri=t,this.entityUri=n;var s=e.prototype.constructor.name.toLowerCase();this.collectionName=i||s+"s",this.entityName=o||s,this.deserialize=r||void 0,this.serialize=a||void 0,this.injector=c||void 0}angular.module("absync").service("AbsyncServiceConfiguration",e)}();
//# sourceMappingURL=maps/absync.concat.min.js.map
